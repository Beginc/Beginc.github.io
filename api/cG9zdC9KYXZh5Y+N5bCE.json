{"title":"Java反射","date":"2019-08-28T12:32:12.000Z","thumbnail":"/post/Java反射/cover.jpg","link":"post/Java反射","updated":"2019-08-28T14:15:22.999Z","content":"<h1 id=\"Class与反射\">Class与反射<a href=\"post/Java反射#Class与反射\"></a></h1><p> Java除了基本类型外都是class，class是由JVM在执行过程中动态加载的。JVM在第一次读取到一种class类型时，将其加载进内存。每加载一种class，JVM就为其创建一个Class类型的实例，并关联起来。注意：这里的Class类型是一个名叫Class的class。该Class包含了该类型的所有信息。<strong>通过Class实例获取类信息的方式叫做反射</strong></p>\n<h1 id=\"类动态加载\">类动态加载<a href=\"post/Java反射#类动态加载\"></a></h1><p>JVM在执行Java程序的时候，并不是一次性把所有用到的class全部加载到内存，而是第一次需要用到class时才加载。利用这个特性我们可以在运行时动态加载类。</p>\n<h1 id=\"获取Class实例\">获取Class实例<a href=\"post/Java反射#获取Class实例\"></a></h1><ul>\n<li><p>类型.class</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class cls = String.class;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>类的实例.getClass()</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\">Class cls = s.getClass();</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p><code>Class.forName(&quot;java.lang.String&quot;)</code></p>\n</li>\n</ul>\n<h1 id=\"获取类的信息\">获取类的信息<a href=\"post/Java反射#获取类的信息\"></a></h1><ul>\n<li><code>cls.getName()</code>获取全称</li>\n<li><code>cls.getSimpleName()</code>获取类名</li>\n<li><code>cls.getPackage().getName()</code>获取报名</li>\n<li><code>cls.isInterface()</code></li>\n<li><code>cls.isEnum()</code></li>\n<li><code>cls.isArray()</code></li>\n<li><code>cls.isPrimitive()</code></li>\n</ul>\n<h1 id=\"获取字段信息\">获取字段信息<a href=\"post/Java反射#获取字段信息\"></a></h1><h2 id=\"获取Field对象\">获取Field对象<a href=\"post/Java反射#获取Field对象\"></a></h2><ul>\n<li><code>Field getField(name)</code>根据字段名获取某个public的field（包括父类）</li>\n<li><code>Field getDeclaredField(name)</code>根据字段名获取当前类的某个field（不包括父类)</li>\n<li><code>Field[] getFields()</code>获取所有public的field（包括父类）</li>\n<li><code>Field[] getDeclaredFields()</code>获取当前类的所有field（不包括父类）</li>\n</ul>\n<h2 id=\"获取Field对象的信息\">获取Field对象的信息<a href=\"post/Java反射#获取Field对象的信息\"></a></h2><ul>\n<li><code>getName()</code>返回字段名称，例如，”name”；</li>\n<li><code>getType()</code>返回字段类型，也是一个<code>Class</code>实例，例如，<code>String.class</code>；</li>\n<li><code>getModifiers()</code>返回字段的修饰符，它是一个<code>int</code>，不同的bit表示不同的含义。<blockquote>\n<p>可用Modifier类的一些静态方法来判断</p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; Field f = String.class.getDeclaredField(<span class=\"string\">\"value\"</span>);</span><br><span class=\"line\">&gt; f.getName(); <span class=\"comment\">// \"value\"</span></span><br><span class=\"line\">&gt; f.getType(); <span class=\"comment\">// class [B 表示byte[]类型</span></span><br><span class=\"line\">&gt; <span class=\"keyword\">int</span> m = f.getModifiers();</span><br><span class=\"line\">&gt; Modifier.isFinal(m); <span class=\"comment\">// true</span></span><br><span class=\"line\">&gt; Modifier.isPublic(m); <span class=\"comment\">// false</span></span><br><span class=\"line\">&gt; Modifier.isProtected(m); <span class=\"comment\">// false</span></span><br><span class=\"line\">&gt; Modifier.isPrivate(m); <span class=\"comment\">// true</span></span><br><span class=\"line\">&gt; Modifier.isStatic(m); <span class=\"comment\">// false</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></div></figure>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"获取Field的指\">获取Field的指<a href=\"post/Java反射#获取Field的指\"></a></h2><ul>\n<li><code>字段.get(类的实例对象)</code>访问实例对象的该字段值</li>\n<li><code>字段.setAccessible(true)</code>设置实例对象该字段值的可访问性</li>\n</ul>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Object p = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"Xiao Ming\"</span>);</span><br><span class=\"line\">        Class c = p.getClass();</span><br><span class=\"line\">        Field f = c.getDeclaredField(<span class=\"string\">\"name\"</span>);</span><br><span class=\"line\">        Object value = f.get(p);</span><br><span class=\"line\">        System.out.println(value); <span class=\"comment\">// \"Xiao Ming\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"设置字段的值\">设置字段的值<a href=\"post/Java反射#设置字段的值\"></a></h2><ul>\n<li><code>字段.set(类的实例对象, 值)</code>访问实例对象的该字段值</li>\n<li><code>字段.setAccessible(true)</code>设置实例对象该字段值的可访问性</li>\n</ul>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"Xiao Ming\"</span>);</span><br><span class=\"line\">        System.out.println(p.getName()); <span class=\"comment\">// \"Xiao Ming\"</span></span><br><span class=\"line\">        Class c = p.getClass();</span><br><span class=\"line\">        Field f = c.getDeclaredField(<span class=\"string\">\"name\"</span>);</span><br><span class=\"line\">        f.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        f.set(p, <span class=\"string\">\"Xiao Hong\"</span>);</span><br><span class=\"line\">        System.out.println(p.getName()); <span class=\"comment\">// \"Xiao Hong\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h1 id=\"获取方法\">获取方法<a href=\"post/Java反射#获取方法\"></a></h1><h2 id=\"获取Method对象\">获取Method对象<a href=\"post/Java反射#获取Method对象\"></a></h2><ul>\n<li><code>Method getMethod(name, Class...)</code>获取某个public的Method（包括父类）(第二个参数parameterTypes是按声明顺序标识该方法形参类型，可用于重载的情况)</li>\n<li><code>Method getDeclaredMethod(name, Class...)</code>获取当前类的某个Method（不包括父类）(第二个参数parameterTypes是按声明顺序标识该方法形参类型，可用于重载的情况)</li>\n<li><code>Method[] getMethods()</code>获取所有public的Method（包括父类）</li>\n<li><code>Method[] getDeclaredMethods()</code>获取当前类的所有Method（不包括父类）</li>\n</ul>\n<h2 id=\"获取Method信息\">获取Method信息<a href=\"post/Java反射#获取Method信息\"></a></h2><ul>\n<li><code>getName()</code>返回方法名称，例如：”getScore”；</li>\n<li><code>getReturnType()</code>返回方法返回值类型，也是一个Class实例，例如：String.class；</li>\n<li><code>getParameterTypes()</code>返回方法的参数类型，是一个Class数组，例如：{String.class, int.class}；</li>\n<li><code>getModifiers()</code>返回方法的修饰符，它是一个int，不同的bit表示不同的含义。</li>\n</ul>\n<h2 id=\"调用Method\">调用Method<a href=\"post/Java反射#调用Method\"></a></h2><ul>\n<li><code>Method.invoke(对象实例，...)</code>传入对象实例和参数(静态方法第一个参数为null)</li>\n<li><code>Method.setAccessible(true)</code>调用非public方法时需要设置允许调用</li>\n</ul>\n","prev":{"title":"MyBatis缓存","link":"post/MyBatis缓存"},"next":{"title":"SpringMVC入门","link":"post/SpringMVC入门"},"plink":"https://beginc.github.io/post/Java反射/","toc":[{"title":"Class与反射","id":"Class与反射","index":"1"},{"title":"类动态加载","id":"类动态加载","index":"2"},{"title":"获取Class实例","id":"获取Class实例","index":"3"},{"title":"获取类的信息","id":"获取类的信息","index":"4"},{"title":"获取字段信息","id":"获取字段信息","index":"5","children":[{"title":"获取Field对象","id":"获取Field对象","index":"5.1"},{"title":"获取Field对象的信息","id":"获取Field对象的信息","index":"5.2"},{"title":"获取Field的指","id":"获取Field的指","index":"5.3"},{"title":"设置字段的值","id":"设置字段的值","index":"5.4"}]},{"title":"获取方法","id":"获取方法","index":"6","children":[{"title":"获取Method对象","id":"获取Method对象","index":"6.1"},{"title":"获取Method信息","id":"获取Method信息","index":"6.2"},{"title":"调用Method","id":"调用Method","index":"6.3"}]}]}