{"title":"路由协议","date":"2020-03-13T14:48:52.000Z","date_formatted":{"ll":"Mar 13, 2020","L":"03/13/2020","MM-DD":"03-13"},"thumbnail":"post/计算机网络/路由协议/cover.jpg","link":"post/计算机网络/路由协议","categories":["计算机网络"],"updated":"2020-03-16T15:50:16.185Z","content":"<h1 id=\"路由算法分类\">路由算法分类<a href=\"#路由算法分类\" title=\"路由算法分类\"></a></h1><h2 id=\"静态路由算法\">静态路由算法<a href=\"#静态路由算法\" title=\"静态路由算法\"></a></h2><p>管理员手动配置路由信息。</p>\n<h2 id=\"动态路由算法\">动态路由算法<a href=\"#动态路由算法\" title=\"动态路由算法\"></a></h2><p>根据路由算法，学习和优化路由表。</p>\n<h3 id=\"全局性\">全局性<a href=\"#全局性\" title=\"全局性\"></a></h3><p>所有路由器都需要掌握完整的网络拓扑和链路代价。</p>\n<ul><li>链路状态路由算法<ul><li>OSPF</li>\n</ul></li>\n</ul><h3 id=\"分散性\">分散性<a href=\"#分散性\" title=\"分散性\"></a></h3><p>路由器只需要掌握物理相连的设备以及链路代价。</p>\n<ul><li>距离向量路由算法<ul><li>RIP</li>\n</ul></li>\n</ul><h2 id=\"内部网关路由协议\">内部网关路由协议<a href=\"#内部网关路由协议\" title=\"内部网关路由协议\"></a></h2><p>一个AS自治系统内部使用的路由协议。</p>\n<ul><li>RIP</li>\n<li>OSPF</li>\n</ul><h2 id=\"外部网关路由协议\">外部网关路由协议<a href=\"#外部网关路由协议\" title=\"外部网关路由协议\"></a></h2><p>多个AS自治系统之间使用的路由协议。</p>\n<ul><li>BGP</li>\n</ul><img src=\"/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE/image-20200313160725033.png\" class=\"\">\n\n<h1 id=\"rip路由协议\">RIP路由协议<a href=\"#rip路由协议\" title=\"RIP路由协议\"></a></h1><h2 id=\"路由表\">路由表<a href=\"#路由表\" title=\"路由表\"></a></h2><img src=\"/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE/image-20200313160800309.png\" class=\"\">\n\n<h2 id=\"距离向量算法\">距离向量算法<a href=\"#距离向量算法\" title=\"距离向量算法\"></a></h2><ol><li>初始时每个路由器都知道与自己直接相连的链路和设备的信息，初始化路由表</li>\n<li>每隔30秒将自己的路由表发送给相邻路由器</li>\n<li>收到路由表后<strong>更新自己的路由表</strong></li>\n<li>若超过180秒未收到相邻路由器的信息，则判断其宕机，将经过该邻居路由器的路由表项的距离全部改成16（表示不可达）</li>\n</ol><p><strong>路由表更新</strong></p>\n<p>收到路由表后按如下步骤进行路由表更新（假设收到了R1路由器的(Net3, 2, R2)）</p>\n<ol><li>将收到的路由表中的所有项的下一跳路由器更新为发送方</li>\n<li>将收到的路由表中的所有项的距离加1</li>\n<li>若自己的路由表中无Net3，则直接将该项加入到自己的路由表</li>\n<li>若自己的路由表中有Net3<ul><li>若下一跳为R1，则无条件直接更新</li>\n<li>若下一跳不是R1，若距离更短则更新</li>\n</ul></li>\n</ol><img src=\"/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE/image-20200313162321705.png\" class=\"\">\n\n<h2 id=\"特点\">特点<a href=\"#特点\" title=\"特点\"></a></h2><ul><li><p>适用于小型网络（一条路由最多16个路由器）</p>\n</li>\n<li><p>好消息传得快，坏消息传得慢</p>\n<ul><li>可使用毒性逆转</li>\n</ul></li>\n<li><p><strong>使用UDP协议</strong></p>\n</li>\n</ul>","prev":{"title":"DNS协议","link":"post/计算机网络/DNS协议"},"next":{"title":"链路层","link":"post/计算机网络/链路层"},"plink":"https://beginc.github.io/post/计算机网络/路由协议/","toc":[{"id":"路由算法分类","title":"路由算法分类","index":"1","children":[{"id":"静态路由算法","title":"静态路由算法","index":"1.1"},{"id":"动态路由算法","title":"动态路由算法","index":"1.2","children":[{"id":"全局性","title":"全局性","index":"1.2.1"},{"id":"分散性","title":"分散性","index":"1.2.2"}]},{"id":"内部网关路由协议","title":"内部网关路由协议","index":"1.3"},{"id":"外部网关路由协议","title":"外部网关路由协议","index":"1.4"}]},{"id":"rip路由协议","title":"RIP路由协议","index":"2","children":[{"id":"路由表","title":"路由表","index":"2.1"},{"id":"距离向量算法","title":"距离向量算法","index":"2.2"},{"id":"特点","title":"特点","index":"2.3"}]}]}