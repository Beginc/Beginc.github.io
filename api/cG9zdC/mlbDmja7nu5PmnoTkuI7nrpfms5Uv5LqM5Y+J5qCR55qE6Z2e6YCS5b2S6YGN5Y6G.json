{"title":"二叉树的非递归遍历","date":"2020-03-15T05:22:34.000Z","date_formatted":{"ll":"Mar 15, 2020","L":"03/15/2020","MM-DD":"03-15"},"thumbnail":"post/数据结构与算法/二叉树的非递归遍历/cover.jpg","link":"post/数据结构与算法/二叉树的非递归遍历","categories":["数据结构与算法"],"updated":"2020-03-15T05:53:47.636Z","content":"<h1 id=\"先序遍历\">先序遍历<a href=\"#先序遍历\" title=\"先序遍历\"></a></h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preOrder</span><span class=\"params\">(TreeNode root)</span> </span>&#123;</span><br><span class=\"line\">    Stack&lt;TreeNode&gt; path = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">    TreeNode p = root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!path.empty() || p != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(p != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            System.out.println(p.val);</span><br><span class=\"line\">            path.push(p);</span><br><span class=\"line\">            p = p.left;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!path.empty())&#123;</span><br><span class=\"line\">            p = path.pop();</span><br><span class=\"line\">            p = p.right;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"中序遍历\">中序遍历<a href=\"#中序遍历\" title=\"中序遍历\"></a></h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inOrder</span><span class=\"params\">(TreeNode root)</span> </span>&#123;</span><br><span class=\"line\">    Stack&lt;TreeNode&gt; path = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">    TreeNode p = root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!path.empty() || p != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(p != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            path.push(p);</span><br><span class=\"line\">            p = p.left;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!path.empty())&#123;</span><br><span class=\"line\">            p = path.pop();</span><br><span class=\"line\">            System.out.println(p.val);</span><br><span class=\"line\">            p = p.right;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"后序遍历\">后序遍历<a href=\"#后序遍历\" title=\"后序遍历\"></a></h1><ul><li>使用pre记录上一次访问的节点<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postOrder</span><span class=\"params\">(TreeNode root)</span> </span>&#123;</span><br><span class=\"line\">    Stack&lt;TreeNode&gt; path = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">    TreeNode p = root;</span><br><span class=\"line\">    TreeNode pre = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!path.empty() || p != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            path.push(p);</span><br><span class=\"line\">            p = p.left;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!path.empty()) &#123;</span><br><span class=\"line\">        \t<span class=\"comment\">// 先不出栈</span></span><br><span class=\"line\">            p = path.peek();</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 1. 若右子树为空，则无需访问</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 2. 若右子树上一次被访问了，则无需访问</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p.right != <span class=\"keyword\">null</span> &amp;&amp; p.right != pre) &#123;</span><br><span class=\"line\">                p = p.right;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(p.val);</span><br><span class=\"line\">                pre = p;</span><br><span class=\"line\">                p = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                <span class=\"comment\">// 后序访问完了，出栈</span></span><br><span class=\"line\">                path.pop();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>","prev":{"title":"Java并发之顺序控制模式","link":"post/Java/Java语言/Java并发/Java并发之顺序控制模式"},"next":{"title":"ICMP协议","link":"post/计算机网络/ICMP协议"},"plink":"https://beginc.github.io/post/数据结构与算法/二叉树的非递归遍历/","toc":[{"id":"先序遍历","title":"先序遍历","index":"1"},{"id":"中序遍历","title":"中序遍历","index":"2"},{"id":"后序遍历","title":"后序遍历","index":"3"}]}