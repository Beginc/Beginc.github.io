{"title":"消息队列应用","date":"2020-02-24T11:30:35.000Z","date_formatted":{"ll":"Feb 24, 2020","L":"02/24/2020","MM-DD":"02-24"},"thumbnail":"post/中间件/RocketMQ/消息队列应用/cover.png","link":"post/中间件/RocketMQ/消息队列应用","categories":["RocketMQ","中间件"],"updated":"2020-02-29T16:17:05.072Z","content":"<h1 id=\"应用解耦\">应用解耦<a href=\"#应用解耦\" title=\"应用解耦\"></a></h1><p>一个系统中常常会出现不同服务之间的调用，此处会出现以下问题。这些都是服务之间耦合的表现。</p>\n<p><strong>下游服务不可用</strong></p>\n<img src=\"/post/%E4%B8%AD%E9%97%B4%E4%BB%B6/RocketMQ/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%BA%94%E7%94%A8/image-20200224193915121.png\" class=\"\">\n\n<p>在注册成功后，我们希望发送一封成功注册的通知邮件给用户，但是由于某些原因，邮件服务暂时不可用，此时会导致我们的注册服务也失败。</p>\n<p><strong>下游服务变化</strong></p>\n<img src=\"/post/%E4%B8%AD%E9%97%B4%E4%BB%B6/RocketMQ/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%BA%94%E7%94%A8/image-20200224194059572.png\" class=\"\">\n\n<p>有时候我们希望注册成功后，换成使用短信来通知用户注册成功，此时我们则需要变动注册服务的代码。</p>\n<p><strong>消息队列解耦</strong></p>\n<p>我们可以通过引入消息队列，注册成功后将消息推发布到消息队列中，让对应的下游服务进行订阅，此时就达到了解耦的目的。</p>\n<img src=\"/post/%E4%B8%AD%E9%97%B4%E4%BB%B6/RocketMQ/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%BA%94%E7%94%A8/image-20200224194423581.png\" class=\"\">\n\n<h1 id=\"异步处理\">异步处理<a href=\"#异步处理\" title=\"异步处理\"></a></h1><p>还是以注册为例，我们完成注册后，不需要等到邮件发送成功才通知用户注册成功，此时我们可以将发送邮件的消息发布到消息队列中，让邮件服务等到空闲时再读取消息，发送邮件，这样一来缓解了邮件服务的压力，二来提高了注册服务的反应速度。</p>\n<h1 id=\"流量削峰\">流量削峰<a href=\"#流量削峰\" title=\"流量削峰\"></a></h1><p>对突增的流量进行进行削峰，减小服务器压力，其实就是做到了缓冲 + 速率转换。</p>\n<img src=\"/post/%E4%B8%AD%E9%97%B4%E4%BB%B6/RocketMQ/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%BA%94%E7%94%A8/image-20200224194853627.png\" class=\"\">\n\n","prev":{"title":"RocketMQ集群搭建","link":"post/中间件/RocketMQ/RocketMQ集群搭建"},"next":{"title":"Java并发之两阶段终止模式","link":"post/Java/Java语言/Java并发/Java并发之两阶段终止模式"},"plink":"https://beginc.github.io/post/中间件/RocketMQ/消息队列应用/","toc":[{"id":"应用解耦","title":"应用解耦","index":"1"},{"id":"异步处理","title":"异步处理","index":"2"},{"id":"流量削峰","title":"流量削峰","index":"3"}]}