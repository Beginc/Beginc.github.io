{"title":"MyBatis缓存","date":"2019-08-28T13:04:25.000Z","thumbnail":"/post/MyBatis缓存/cover.jpg","link":"post/MyBatis缓存","tags":["MyBatis"],"categories":["Java"],"updated":"2019-08-28T16:41:09.957Z","content":"<h1 id=\"一级缓存\">一级缓存<a href=\"post/MyBatis缓存#一级缓存\"></a></h1><h2 id=\"一级缓存介绍\">一级缓存介绍<a href=\"post/MyBatis缓存#一级缓存介绍\"></a></h2><p>在应用运行过程中，我们有可能在一次数据库会话中，执行多次查询条件完全相同的<code>SQL</code>，<code>MyBatis</code>提供了一级缓存的方案优化这部分场景，如果是相同的SQL语句，会优先命中一级缓存，避免直接对数据库进行查询，提高性能。在每个<code>SqlSession</code>中持有<code>Executor</code>，每个<code>Executor</code>中有一个<code>LocalCache</code>。当用户发起查询时，<code>MyBatis</code>根据当前执行的语句生成<code>MappedStatement</code>，在<code>Local Cache</code>进行查询，如果缓存命中的话，直接返回结果给用户，如果缓存没有命中的话，查询数据库，结果写入<code>Local Cache</code>，最后返回结果给用户。</p>\n<h2 id=\"一级缓存配置\">一级缓存配置<a href=\"post/MyBatis缓存#一级缓存配置\"></a></h2><p>在<code>SqlMapConfig.xml</code>的settings中进行配置，默认值为<code>SESSION</code></p>\n<ul>\n<li><code>SESSION</code>缓存作用一次<code>SqlSession</code></li>\n<li><code>STATEMENT</code>只对当前执行的这一个<code>Statement</code>有效</li>\n</ul>\n<figure class=\"highlight xml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">\"localCacheScope\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"SESSION\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">student = mapper.findById(<span class=\"number\">1</span>); <span class=\"comment\">//不走缓存</span></span><br><span class=\"line\">student = mapper.findById(<span class=\"number\">1</span>); <span class=\"comment\">//缓存</span></span><br><span class=\"line\">student = mapper.findById(<span class=\"number\">1</span>); <span class=\"comment\">//缓存</span></span><br><span class=\"line\">student = mapper.findById(<span class=\"number\">1</span>); <span class=\"comment\">//缓存</span></span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"调试分析\">调试分析<a href=\"post/MyBatis缓存#调试分析\"></a></h2><img src=\"/post/MyBatis缓存/1.png\" class=\"article-img\">\n<p>进入<code>invoke</code>方法????</p>\n<img src=\"/post/MyBatis缓存/2.png\" class=\"article-img\">\n<p>调用<code>cachedMapperMethod</code>，<code>methodCache</code>为<code>ConcurrentHashMap</code>，在其中获取存储的方法对象</p>\n<img src=\"/post/MyBatis缓存/3.png\" class=\"article-img\">\n<p>没有找到该method对象，说明没有进行过调用，为其新建一个<code>MapperMethod</code>对象，存储到<code>methodCache</code>中</p>\n<img src=\"/post/MyBatis缓存/4.png\" class=\"article-img\">\n<p>执行方法</p>\n<img src=\"/post/MyBatis缓存/5.png\" class=\"article-img\">\n\n<h2 id=\"一级缓存特点\">一级缓存特点<a href=\"post/MyBatis缓存#一级缓存特点\"></a></h2><ul>\n<li><code>SESSION</code> Scope缓存只在一个session内有效</li>\n<li>一个session内多次使用同一个查询，除第一次查询外，其他走缓存</li>\n<li>使用修改（增，删，改）操作后一级缓存会被清空失效</li>\n<li>无法适应分布式下多个session的缓解，一级缓存会导致读脏数据</li>\n</ul>\n<h2 id=\"一级缓存导致脏读\">一级缓存导致脏读<a href=\"post/MyBatis缓存#一级缓存导致脏读\"></a></h2><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SqlSession session1 = factory.openSession(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">SqlSession session2 = factory.openSession(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">StudentMapper mapper1 = session1.getMapper(StudentMapper.class);</span><br><span class=\"line\">StudentMapper mapper2 = session2.getMapper(StudentMapper.class);</span><br><span class=\"line\"><span class=\"comment\">// Student(name=\"Bob\")</span></span><br><span class=\"line\">student = mapper1.findById(<span class=\"number\">1</span>); <span class=\"comment\">//不走缓存，建立缓存</span></span><br><span class=\"line\"><span class=\"comment\">// Student(name=\"Bob\")</span></span><br><span class=\"line\">student = mapper1.findById(<span class=\"number\">1</span>); <span class=\"comment\">//session1缓存</span></span><br><span class=\"line\"><span class=\"comment\">// Student(name=\"Bob\")</span></span><br><span class=\"line\">student = mapper2.findById(<span class=\"number\">1</span>); <span class=\"comment\">//不走缓存，建立缓存</span></span><br><span class=\"line\"><span class=\"comment\">// Student(name=\"Bob\")</span></span><br><span class=\"line\">student = mapper2.findById(<span class=\"number\">1</span>); <span class=\"comment\">//session2缓存</span></span><br><span class=\"line\"></span><br><span class=\"line\">student.setName(<span class=\"string\">\"John\"</span>); </span><br><span class=\"line\">mapper1.updateName(student); <span class=\"comment\">//更新名字，session1清空缓存</span></span><br><span class=\"line\">session1.commit()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Student(name=\"John\")</span></span><br><span class=\"line\">student = mapper1.findById(<span class=\"number\">1</span>); <span class=\"comment\">//不走缓存，建立缓存</span></span><br><span class=\"line\"><span class=\"comment\">// Student(name=\"Bob\")</span></span><br><span class=\"line\">student = mapper2.findById(<span class=\"number\">1</span>); <span class=\"comment\">//继续走缓存，脏读!!</span></span><br></pre></td></tr></table></div></figure>\n\n<p><strong>解决方法</strong></p>\n<p>将<code>localSessionScope</code>设置为<code>STATEMENT</code></p>\n","prev":{"title":"Java日志框架","link":"post/Java日志框架"},"next":{"title":"Java反射","link":"post/Java反射"},"plink":"https://beginc.github.io/post/MyBatis缓存/","toc":[{"title":"一级缓存","id":"一级缓存","index":"1","children":[{"title":"一级缓存介绍","id":"一级缓存介绍","index":"1.1"},{"title":"一级缓存配置","id":"一级缓存配置","index":"1.2"},{"title":"调试分析","id":"调试分析","index":"1.3"},{"title":"一级缓存特点","id":"一级缓存特点","index":"1.4"},{"title":"一级缓存导致脏读","id":"一级缓存导致脏读","index":"1.5"}]}]}