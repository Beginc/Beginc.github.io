{"title":"4-shiro授权","date":"2020-02-06T03:07:41.000Z","date_formatted":{"ll":"Feb 6, 2020","L":"02/06/2020","MM-DD":"02-06"},"thumbnail":"post/Java/Shiro/4-shiro授权/cover.jpg","link":"post/Java/Shiro/4-shiro授权","categories":["Java","Shiro"],"updated":"2020-02-08T02:51:41.532Z","content":"<h1 id=\"权限管理模型\">权限管理模型<a href=\"#权限管理模型\" title=\"权限管理模型\"></a></h1><p>权限管理模型一般抽象为<code>User</code>, <code>Role</code>, <code>Permission</code>模型。</p>\n<ul><li><code>User</code>可以有多个<code>Role</code></li>\n<li><code>Role</code>可以有多个<code>Permission</code></li>\n<li><code>Permission</code>代表了对资源访问的权限</li>\n</ul><p><strong>Permission表示方式</strong></p>\n<p><code>资源:操作:实例</code></p>\n<ul><li><p><code>user:query</code>用户的查询权限</p>\n</li>\n<li><p><code>user:add</code>添加用户的权限</p>\n</li>\n<li><p><code>user:query:1</code>查询用户1的权限</p>\n</li>\n<li><p><code>*:query</code>任何资源的查询权限(只能匹配前面一级)</p>\n</li>\n<li><p><code>user:*</code>任何用户实例的任何权限(可匹配多级)</p>\n</li>\n<li><p><code>*</code>所有权限</p>\n</li>\n</ul><h1 id=\"shiro授权api\">Shiro授权API<a href=\"#shiro授权api\" title=\"Shiro授权API\"></a></h1><h2 id=\"角色检查\">角色检查<a href=\"#角色检查\" title=\"角色检查\"></a></h2><p><strong>返回boolean</strong></p>\n<ul><li><code>Subject.hasRole</code></li>\n<li><code>Subject.hasRoles</code></li>\n<li><code>Subject.hasAllRoles</code></li>\n</ul><p><strong>抛异常</strong></p>\n<ul><li><code>Subject.checkRole</code></li>\n<li><code>Subject.checkRoles</code></li>\n</ul><h2 id=\"权限检查\">权限检查<a href=\"#权限检查\" title=\"权限检查\"></a></h2><p><strong>返回boolean</strong></p>\n<ul><li><code>Subject.isPermitted</code></li>\n<li><code>Subject.isPermittedAll</code></li>\n</ul><p><strong>抛异常</strong></p>\n<ul><li><code>Subject.checkPermission</code></li>\n<li><code>Subject.checkPermissions</code></li>\n</ul><h1 id=\"shiro授权流程\">Shiro授权流程<a href=\"#shiro授权流程\" title=\"Shiro授权流程\"></a></h1><ol><li><p><code>Subject.hasRole(&quot;user&quot;)</code>进行认证</p>\n</li>\n<li><p><code>SecurityManager</code>调用<code>Authorizer</code>进行认证</p>\n</li>\n<li><p><code>Authorizer</code>调用<code>Realm</code>进行授权信息查询</p>\n</li>\n<li><p><code>Authorizer</code>根据查询到的信息判断是否有权限</p>\n</li>\n</ol><h2 id=\"源码分析\">源码分析<a href=\"#源码分析\" title=\"源码分析\"></a></h2><ol><li><code>DelegatingSubject</code>调用<code>hasRole</code>方法进行角色查询。</li>\n</ol><img src=\"/post/Java/Shiro/4-shiro%E6%8E%88%E6%9D%83/1.png\" class=\"\">\n\n<ol><li>没有认证则直接返回<code>false</code>，否则<code>DelegatingSubject</code>调用<code>DefaultSecurityManager</code>的<code>hasRole</code>方法进行角色查询。</li>\n</ol><img src=\"/post/Java/Shiro/4-shiro%E6%8E%88%E6%9D%83/2.png\" class=\"\">\n\n<ol><li><code>hasRole</code>方法定义在<code>AuthorizingSecurityManager</code>中，调用<code>authorizer</code>的<code>hasRole</code>方法进行角色查询。</li>\n</ol><img src=\"/post/Java/Shiro/4-shiro%E6%8E%88%E6%9D%83/3.png\" class=\"\">\n\n<ol><li><code>DefaultSecurityManager</code>的默认<code>authorizer</code>为<code>ModularRealmAuthorizer</code>，它调用所有实现了<code>Authorizer</code>接口的<code>Realm</code>的<code>hasRole</code>方法进行角色查询，只要有一个<code>Realm</code>返回<code>true</code>，则<code>hasRole</code>返回<code>true</code>。</li>\n</ol><img src=\"/post/Java/Shiro/4-shiro%E6%8E%88%E6%9D%83/4.png\" class=\"\">\n\n<ol><li><code>AuthorizingRealm</code>实现了<code>Authorizer</code>接口，实现了<code>hasRole</code>方法，它调用<code>getAuthorizationInfo</code>进行授权信息查询，随后将信息交由<code>hasRole</code>的重载方法进行角色查询。</li>\n</ol><img src=\"/post/Java/Shiro/4-shiro%E6%8E%88%E6%9D%83/5.png\" class=\"\">\n\n<ol><li><code>getAuthorizationInfo</code>方法最终又会调用<code>doGetAuthorizationInfo</code>方法进行授权信息查询。</li>\n</ol><img src=\"/post/Java/Shiro/4-shiro%E6%8E%88%E6%9D%83/6.png\" class=\"\">\n\n<ol><li><code>doGetAuthorizationInfo</code>为抽象方法，子类需要实现该方法进行授权信息查询。</li>\n</ol><img src=\"/post/Java/Shiro/4-shiro%E6%8E%88%E6%9D%83/7.png\" class=\"\">\n\n\n<h1 id=\"授权相关组件\">授权相关组件<a href=\"#授权相关组件\" title=\"授权相关组件\"></a></h1><h2 id=\"authorizer\">Authorizer<a href=\"#authorizer\" title=\"Authorizer\"></a></h2><p><code>Authorizer</code>的主要职责就是实现<code>hasRole</code>等方法进行权限验证。</p>\n<h2 id=\"realm\">Realm<a href=\"#realm\" title=\"Realm\"></a></h2><h2 id=\"作用\">作用<a href=\"#作用\" title=\"作用\"></a></h2><p>由源码分析可知，只有实现了<code>Authorizer</code>接口的<code>Realm</code>才会在授权时起作用，它主要负责根据<code>Principal</code>进行授权信息查询。</p>\n<h2 id=\"扩展\">扩展<a href=\"#扩展\" title=\"扩展\"></a></h2><p>继承<code>AuthorizingRealm</code>，实现<code>doGetAuthenticationInfo</code>方法进行认证信息查询，实现<code>doGetAuthorizationInfo</code>方法进行授权信息查询。</p>\n<h2 id=\"配置\">配置<a href=\"#配置\" title=\"配置\"></a></h2><p>同中<code>Realm</code>的配置。</p>\n<h1 id=\"自定义realm实现授权\">自定义Realm实现授权<a href=\"#自定义realm实现授权\" title=\"自定义Realm实现授权\"></a></h1><h2 id=\"扩展realm\">扩展Realm<a href=\"#扩展realm\" title=\"扩展Realm\"></a></h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Realm2</span> <span class=\"keyword\">extends</span> <span class=\"title\">AuthorizingRealm</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> AuthorizationInfo <span class=\"title\">doGetAuthorizationInfo</span><span class=\"params\">(PrincipalCollection principals)</span> </span>&#123;</span><br><span class=\"line\">        String username = (String) principals.getPrimaryPrincipal();</span><br><span class=\"line\">        SimpleAuthorizationInfo info = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 直接Hard Code</span></span><br><span class=\"line\">        <span class=\"comment\">//  可替换成数据库操作</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (username.equals(<span class=\"string\">\"user1\"</span>)) &#123;</span><br><span class=\"line\">            Set&lt;String&gt; roles = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">            roles.add(<span class=\"string\">\"user\"</span>);</span><br><span class=\"line\">            Set&lt;String&gt; permissions = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">            permissions.add(<span class=\"string\">\"user:query\"</span>);</span><br><span class=\"line\">            info = <span class=\"keyword\">new</span> SimpleAuthorizationInfo(roles);</span><br><span class=\"line\">            info.addStringPermissions(permissions);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (username.equals(<span class=\"string\">\"user2\"</span>))&#123;</span><br><span class=\"line\">            Set&lt;String&gt; roles = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">            roles.add(<span class=\"string\">\"admin\"</span>);</span><br><span class=\"line\">            Set&lt;String&gt; permissions = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">            permissions.add(<span class=\"string\">\"user:*\"</span>);</span><br><span class=\"line\">            info = <span class=\"keyword\">new</span> SimpleAuthorizationInfo(roles);</span><br><span class=\"line\">            info.addStringPermissions(permissions);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> info;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> AuthenticationInfo <span class=\"title\">doGetAuthenticationInfo</span><span class=\"params\">(AuthenticationToken token)</span> <span class=\"keyword\">throws</span> AuthenticationException </span>&#123;</span><br><span class=\"line\">        String username = (String) token.getPrincipal();</span><br><span class=\"line\">        SimpleAuthenticationInfo info = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (username.equals(<span class=\"string\">\"user1\"</span>))</span><br><span class=\"line\">            info = <span class=\"keyword\">new</span> SimpleAuthenticationInfo(<span class=\"string\">\"user1\"</span>, <span class=\"string\">\"123\"</span>, getName());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (username.equals(<span class=\"string\">\"user2\"</span>))</span><br><span class=\"line\">            info = <span class=\"keyword\">new</span> SimpleAuthenticationInfo(<span class=\"string\">\"user2\"</span>, <span class=\"string\">\"456\"</span>, getName());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> info;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置realm\">配置Realm<a href=\"#配置realm\" title=\"配置Realm\"></a></h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[main]</span></span><br><span class=\"line\"><span class=\"attr\">realm2</span> = cn.edu.njust.realm.Realm2</span><br><span class=\"line\"><span class=\"attr\">securityManager.realms</span> = <span class=\"variable\">$realm2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"测试\">测试<a href=\"#测试\" title=\"测试\"></a></h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test02</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Factory&lt;SecurityManager&gt; factory = <span class=\"keyword\">new</span> IniSecurityManagerFactory(<span class=\"string\">\"classpath:shiro.ini\"</span>);</span><br><span class=\"line\">        SecurityManager securityManager = factory.getInstance();</span><br><span class=\"line\">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class=\"line\"></span><br><span class=\"line\">        Subject subject = SecurityUtils.getSubject();</span><br><span class=\"line\">        UsernamePasswordToken token = <span class=\"keyword\">new</span> UsernamePasswordToken();</span><br><span class=\"line\">        token.setUsername(<span class=\"string\">\"user1\"</span>);</span><br><span class=\"line\">        token.setPassword(<span class=\"string\">\"123\"</span>.toCharArray());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            subject.login(token);</span><br><span class=\"line\">            System.out.println(subject.hasRole(<span class=\"string\">\"user\"</span>));</span><br><span class=\"line\">            System.out.println(subject.hasRole(<span class=\"string\">\"admin\"</span>));</span><br><span class=\"line\">            System.out.println(subject.isPermitted(<span class=\"string\">\"user:query\"</span>));</span><br><span class=\"line\">            System.out.println(subject.isPermitted(<span class=\"string\">\"user:add\"</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (AuthenticationException e)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"登录失败\"</span>);</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","prev":{"title":"5-shiro加密","link":"post/Java/Shiro/5-shiro加密"},"next":{"title":"3-shiro认证","link":"post/Java/Shiro/3-shiro认证"},"plink":"https://beginc.github.io/post/Java/Shiro/4-shiro授权/","toc":[{"id":"权限管理模型","title":"权限管理模型","index":"1"},{"id":"shiro授权api","title":"Shiro授权API","index":"2","children":[{"id":"角色检查","title":"角色检查","index":"2.1"},{"id":"权限检查","title":"权限检查","index":"2.2"}]},{"id":"shiro授权流程","title":"Shiro授权流程","index":"3","children":[{"id":"源码分析","title":"源码分析","index":"3.1"}]},{"id":"授权相关组件","title":"授权相关组件","index":"4","children":[{"id":"authorizer","title":"Authorizer","index":"4.1"},{"id":"realm","title":"Realm","index":"4.2"},{"id":"作用","title":"作用","index":"4.3"},{"id":"扩展","title":"扩展","index":"4.4"},{"id":"配置","title":"配置","index":"4.5"}]},{"id":"自定义realm实现授权","title":"自定义Realm实现授权","index":"5","children":[{"id":"扩展realm","title":"扩展Realm","index":"5.1"},{"id":"配置realm","title":"配置Realm","index":"5.2"},{"id":"测试","title":"测试","index":"5.3"}]}]}