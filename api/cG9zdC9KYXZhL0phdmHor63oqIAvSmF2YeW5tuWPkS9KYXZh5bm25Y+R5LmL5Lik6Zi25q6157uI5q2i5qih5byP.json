{"title":"Java并发之两阶段终止模式","date":"2020-02-12T14:57:43.000Z","date_formatted":{"ll":"Feb 12, 2020","L":"02/12/2020","MM-DD":"02-12"},"link":"post/Java/Java语言/Java并发/Java并发之两阶段终止模式","categories":["Java","Java并发","Java语言"],"updated":"2020-03-16T15:30:48.408Z","content":"<h1 id=\"简介\">简介<a href=\"#简介\" title=\"简介\"></a></h1><p>该模式用于优雅的终止一个线程。</p>\n<p><strong>stop方法的弊端</strong></p>\n<p>调用该方法可以杀死一个线程，但是如果该线程锁住了某些共享资源，则可能导致死锁。</p>\n<h1 id=\"两阶段终止模式实现\">两阶段终止模式实现<a href=\"#两阶段终止模式实现\" title=\"两阶段终止模式实现\"></a></h1><ol><li>线程运行时不断监控打断标记，若有打断标记，则处理完后事后终止线程。</li>\n<li>使用打断来终止线程而不是stop。</li>\n</ol><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">        MyMonitor monitor = <span class=\"keyword\">new</span> MyMonitor();</span><br><span class=\"line\">        monitor.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">4500</span>);</span><br><span class=\"line\">        monitor.stop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyMonitor</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Thread thread;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">                    Thread current = Thread.currentThread();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(thread.isInterrupted())&#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"被打断了...\"</span>);</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"做善后处理...\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"继续做我的事情...\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                            System.out.println(<span class=\"string\">\"睡眠的时候被打断了...\"</span>);</span><br><span class=\"line\">                            System.out.println(<span class=\"string\">\"使用打断来做善后处理...\"</span>);</span><br><span class=\"line\">                            current.interrupt();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        thread.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        thread.interrupt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","prev":{"title":"消息队列应用","link":"post/中间件/RocketMQ/消息队列应用"},"next":{"title":"Java并发之ReentrantLock","link":"post/Java/Java语言/Java并发/Java并发之ReentrantLock"},"plink":"https://beginc.github.io/post/Java/Java语言/Java并发/Java并发之两阶段终止模式/","toc":[{"id":"简介","title":"简介","index":"1"},{"id":"两阶段终止模式实现","title":"两阶段终止模式实现","index":"2"}]}